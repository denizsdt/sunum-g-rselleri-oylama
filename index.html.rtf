{\rtf1\ansi\ansicpg1254\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="en">\
<head>\
    <meta charset="UTF-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <title>Content Voting App</title>\
    <style>\
        body \{\
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\
            max-width: 1200px;\
            margin: 0 auto;\
            padding: 20px;\
            background-color: #f5f5f5;\
        \}\
        h1 \{\
            text-align: center;\
            color: #333;\
        \}\
        .content-grid \{\
            display: grid;\
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\
            gap: 20px;\
            margin-top: 30px;\
        \}\
        .content-item \{\
            background-color: white;\
            border-radius: 8px;\
            overflow: hidden;\
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\
            transition: transform 0.3s ease;\
        \}\
        .content-item:hover \{\
            transform: translateY(-5px);\
        \}\
        .content-item img, .content-item video \{\
            width: 100%;\
            height: 200px;\
            object-fit: cover;\
        \}\
        .content-info \{\
            padding: 15px;\
        \}\
        .content-title \{\
            margin: 0 0 10px 0;\
            font-size: 18px;\
        \}\
        .vote-count \{\
            font-weight: bold;\
            color: #555;\
            margin-bottom: 10px;\
        \}\
        .vote-buttons \{\
            display: flex;\
            gap: 10px;\
        \}\
        .vote-btn \{\
            flex: 1;\
            padding: 8px;\
            border: none;\
            border-radius: 4px;\
            cursor: pointer;\
            font-weight: bold;\
            transition: background-color 0.2s;\
        \}\
        .like-btn \{\
            background-color: #4CAF50;\
            color: white;\
        \}\
        .like-btn:hover \{\
            background-color: #45a049;\
        \}\
        .dislike-btn \{\
            background-color: #f44336;\
            color: white;\
        \}\
        .dislike-btn:hover \{\
            background-color: #da190b;\
        \}\
        .sorting-controls \{\
            margin: 20px 0;\
            text-align: center;\
        \}\
        .sort-btn \{\
            background-color: #2196F3;\
            color: white;\
            border: none;\
            padding: 10px 15px;\
            border-radius: 4px;\
            cursor: pointer;\
            margin: 0 5px;\
            font-weight: bold;\
        \}\
        .sort-btn:hover \{\
            background-color: #0b7dda;\
        \}\
        .sort-btn.active \{\
            background-color: #0b7dda;\
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\
        \}\
        .add-content-btn \{\
            display: block;\
            margin: 20px auto;\
            padding: 10px 20px;\
            background-color: #9c27b0;\
            color: white;\
            border: none;\
            border-radius: 4px;\
            cursor: pointer;\
            font-weight: bold;\
        \}\
        .add-content-btn:hover \{\
            background-color: #7B1FA2;\
        \}\
        .modal \{\
            display: none;\
            position: fixed;\
            z-index: 1;\
            left: 0;\
            top: 0;\
            width: 100%;\
            height: 100%;\
            background-color: rgba(0, 0, 0, 0.5);\
        \}\
        .modal-content \{\
            background-color: white;\
            margin: 10% auto;\
            padding: 20px;\
            border-radius: 8px;\
            width: 60%;\
            max-width: 500px;\
        \}\
        .modal-form \{\
            display: flex;\
            flex-direction: column;\
            gap: 15px;\
        \}\
        .modal-form input, .modal-form select \{\
            padding: 8px;\
            border: 1px solid #ddd;\
            border-radius: 4px;\
        \}\
        .modal-buttons \{\
            display: flex;\
            justify-content: flex-end;\
            gap: 10px;\
            margin-top: 20px;\
        \}\
        .close-btn \{\
            background-color: #ccc;\
            color: black;\
        \}\
        .submit-btn \{\
            background-color: #4CAF50;\
            color: white;\
        \}\
        .modal-buttons button \{\
            padding: 8px 15px;\
            border: none;\
            border-radius: 4px;\
            cursor: pointer;\
        \}\
    </style>\
</head>\
<body>\
    <h1>Content Voting App</h1>\
    \
    <div class="sorting-controls">\
        <button id="sort-highest" class="sort-btn active">Highest Votes First</button>\
        <button id="sort-lowest" class="sort-btn">Lowest Votes First</button>\
    </div>\
    \
    <button id="add-content" class="add-content-btn">Add New Content</button>\
    \
    <div id="content-grid" class="content-grid">\
        <!-- Content will be dynamically added here -->\
    </div>\
    \
    <!-- Modal for adding content -->\
    <div id="add-content-modal" class="modal">\
        <div class="modal-content">\
            <h2>Add New Content</h2>\
            <form id="add-content-form" class="modal-form">\
                <input type="text" id="content-title" placeholder="Title" required>\
                <select id="content-type" required>\
                    <option value="">Select content type</option>\
                    <option value="image">Image</option>\
                    <option value="video">Video</option>\
                </select>\
                <input type="url" id="content-url" placeholder="URL to image or video" required>\
                <div class="modal-buttons">\
                    <button type="button" id="close-modal" class="close-btn">Cancel</button>\
                    <button type="submit" class="submit-btn">Add Content</button>\
                </div>\
            </form>\
        </div>\
    </div>\
    \
    <script>\
        // Sample initial content\
        let contentItems = [\
            \{\
                id: 1,\
                type: 'image',\
                title: 'Beautiful Sunset',\
                url: 'https://source.unsplash.com/random/300x200/?sunset',\
                votes: 0\
            \},\
            \{\
                id: 2,\
                type: 'image',\
                title: 'Mountain Landscape',\
                url: 'https://source.unsplash.com/random/300x200/?mountains',\
                votes: 0\
            \},\
            \{\
                id: 3,\
                type: 'video',\
                title: 'Ocean Waves',\
                url: 'https://samplelib.com/lib/preview/mp4/sample-5s.mp4',\
                votes: 0\
            \},\
            \{\
                id: 4,\
                type: 'image',\
                title: 'City Skyline',\
                url: 'https://source.unsplash.com/random/300x200/?city',\
                votes: 0\
            \},\
            \{\
                id: 5,\
                type: 'video',\
                title: 'Forest Wildlife',\
                url: 'https://samplelib.com/lib/preview/mp4/sample-10s.mp4',\
                votes: 0\
            \}\
        ];\
\
        // DOM elements\
        const contentGrid = document.getElementById('content-grid');\
        const sortHighestBtn = document.getElementById('sort-highest');\
        const sortLowestBtn = document.getElementById('sort-lowest');\
        const addContentBtn = document.getElementById('add-content');\
        const modal = document.getElementById('add-content-modal');\
        const closeModalBtn = document.getElementById('close-modal');\
        const addContentForm = document.getElementById('add-content-form');\
\
        // Initialize the app\
        function init() \{\
            // Load content from local storage if available\
            const savedContent = localStorage.getItem('contentItems');\
            if (savedContent) \{\
                contentItems = JSON.parse(savedContent);\
            \}\
            \
            renderContent();\
            setupEventListeners();\
        \}\
\
        // Render all content items\
        function renderContent() \{\
            contentGrid.innerHTML = '';\
            \
            contentItems.forEach(item => \{\
                const contentElement = document.createElement('div');\
                contentElement.className = 'content-item';\
                contentElement.dataset.id = item.id;\
                \
                let mediaElement;\
                if (item.type === 'image') \{\
                    mediaElement = `<img src="$\{item.url\}" alt="$\{item.title\}">`;\
                \} else if (item.type === 'video') \{\
                    mediaElement = `<video src="$\{item.url\}" controls></video>`;\
                \}\
                \
                contentElement.innerHTML = `\
                    $\{mediaElement\}\
                    <div class="content-info">\
                        <h3 class="content-title">$\{item.title\}</h3>\
                        <div class="vote-count">$\{item.votes\} votes</div>\
                        <div class="vote-buttons">\
                            <button class="vote-btn like-btn" data-action="like">\uc0\u55357 \u56397  Like</button>\
                            <button class="vote-btn dislike-btn" data-action="dislike">\uc0\u55357 \u56398  Dislike</button>\
                        </div>\
                    </div>\
                `;\
                \
                contentGrid.appendChild(contentElement);\
            \});\
        \}\
\
        // Set up event listeners\
        function setupEventListeners() \{\
            // Voting buttons\
            contentGrid.addEventListener('click', handleVote);\
            \
            // Sorting buttons\
            sortHighestBtn.addEventListener('click', () => \{\
                sortContent('highest');\
                setActiveSortButton(sortHighestBtn);\
            \});\
            \
            sortLowestBtn.addEventListener('click', () => \{\
                sortContent('lowest');\
                setActiveSortButton(sortLowestBtn);\
            \});\
            \
            // Add content modal\
            addContentBtn.addEventListener('click', () => \{\
                modal.style.display = 'block';\
            \});\
            \
            closeModalBtn.addEventListener('click', () => \{\
                modal.style.display = 'none';\
            \});\
            \
            window.addEventListener('click', (event) => \{\
                if (event.target === modal) \{\
                    modal.style.display = 'none';\
                \}\
            \});\
            \
            // Add content form\
            addContentForm.addEventListener('submit', handleAddContent);\
        \}\
\
        // Handle voting\
        function handleVote(event) \{\
            const target = event.target;\
            if (target.classList.contains('vote-btn')) \{\
                const contentId = parseInt(target.closest('.content-item').dataset.id);\
                const action = target.dataset.action;\
                \
                const contentIndex = contentItems.findIndex(item => item.id === contentId);\
                if (contentIndex !== -1) \{\
                    if (action === 'like') \{\
                        contentItems[contentIndex].votes++;\
                    \} else if (action === 'dislike') \{\
                        contentItems[contentIndex].votes--;\
                    \}\
                    \
                    // Save to local storage\
                    saveToLocalStorage();\
                    \
                    // Re-sort and render content\
                    const currentSortMethod = sortHighestBtn.classList.contains('active') ? 'highest' : 'lowest';\
                    sortContent(currentSortMethod);\
                \}\
            \}\
        \}\
\
        // Handle adding new content\
        function handleAddContent(event) \{\
            event.preventDefault();\
            \
            const title = document.getElementById('content-title').value;\
            const type = document.getElementById('content-type').value;\
            const url = document.getElementById('content-url').value;\
            \
            if (title && type && url) \{\
                const newId = contentItems.length > 0 ? Math.max(...contentItems.map(item => item.id)) + 1 : 1;\
                \
                contentItems.push(\{\
                    id: newId,\
                    type,\
                    title,\
                    url,\
                    votes: 0\
                \});\
                \
                // Save to local storage\
                saveToLocalStorage();\
                \
                // Re-sort and render content\
                const currentSortMethod = sortHighestBtn.classList.contains('active') ? 'highest' : 'lowest';\
                sortContent(currentSortMethod);\
                \
                // Close modal and reset form\
                modal.style.display = 'none';\
                addContentForm.reset();\
            \}\
        \}\
\
        // Sort content\
        function sortContent(method) \{\
            contentItems.sort((a, b) => \{\
                if (method === 'highest') \{\
                    return b.votes - a.votes;\
                \} else \{\
                    return a.votes - b.votes;\
                \}\
            \});\
            \
            renderContent();\
        \}\
\
        // Set active sort button\
        function setActiveSortButton(activeButton) \{\
            sortHighestBtn.classList.remove('active');\
            sortLowestBtn.classList.remove('active');\
            activeButton.classList.add('active');\
        \}\
\
        // Save content to local storage\
        function saveToLocalStorage() \{\
            localStorage.setItem('contentItems', JSON.stringify(contentItems));\
        \}\
\
        // Initialize the app\
        document.addEventListener('DOMContentLoaded', init);\
    </script>\
</body>\
</html>}